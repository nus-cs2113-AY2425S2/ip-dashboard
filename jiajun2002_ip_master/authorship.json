[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jiajun2002"},"content":"# Lebron project template","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 17, update Intellij to the most recent version.","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 17** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-07-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiajun2002"},"content":"1. After that, locate the `src/main/java/Lebron.java` file, right-click it, and choose `Run Lebron.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2025-01-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Warning:** Keep the `src\\main\\java` folder as the root folder for Java files (i.e., don\u0027t rename those folders or move Java files to another folder outside of this folder path), as this is the default location some tools (e.g., Gradle) expect to find Java files.","lastModifiedDate":"2025-01-04","isFullCredit":false}],"authorContributionMap":{"jiajun2002":2,"-":24}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jiajun2002"},"content":"# Lebron User Guide","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiajun2002"},"content":"## Introduction","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiajun2002"},"content":"Lebron is a command line interface (CLI) based task management application that helps you to organise your tasks efficiently.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiajun2002"},"content":"With the help of Lebron, users will be able to add, delete, find, mark, and list tasks easily. They don\u0027t call him the King for nothing.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiajun2002"},"content":"## Features","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiajun2002"},"content":"### Adding Tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiajun2002"},"content":"Lebron supports three different types of tasks - Todos, Deadlines, and Events.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiajun2002"},"content":"### Adding a Todo","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiajun2002"},"content":"Adds a Todo - a task containing only a description.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiajun2002"},"content":"**Format:** `todo DESCRIPTION`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiajun2002"},"content":"**Example:** `todo play basketball`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiajun2002"},"content":"**Output:**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiajun2002"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiajun2002"},"content":"Alright! Get ready to do this: ","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiajun2002"},"content":"--\u003e play basketball","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiajun2002"},"content":"Be confident in your ability! Current tasks: 1","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiajun2002"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiajun2002"},"content":"### Adding a Deadline","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiajun2002"},"content":"Adds a Deadline - a task containing a description and a due date.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiajun2002"},"content":"**Format:** `deadline DESCRIPTION /by DATE`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiajun2002"},"content":"**Example:** `deadline beat the nuggets /by tmr 6pm`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiajun2002"},"content":"**Output:**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiajun2002"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiajun2002"},"content":"Alright! Get ready to do this: ","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiajun2002"},"content":"--\u003e [D][ ] beat the nuggets (by: tmr 6pm)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiajun2002"},"content":"Be confident in your ability! Current tasks: 2","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiajun2002"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiajun2002"},"content":"### Adding an Event","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiajun2002"},"content":"Adds an Event - a task containing a description, start date, and end date.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiajun2002"},"content":"**Format:** `event DESCRIPTION /from START_DATE /to END_DATE`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiajun2002"},"content":"**Example:** `event game vs warriors /from 6pm /to 8pm`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiajun2002"},"content":"**Output:**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiajun2002"},"content":"Alright! Get ready to do this: ","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jiajun2002"},"content":"--\u003e [E][ ] game vs warriors (from: 6pm to: 8pm)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jiajun2002"},"content":"Be confident in your ability! Current tasks: 3","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jiajun2002"},"content":"### Listing Tasks","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jiajun2002"},"content":"Displays the current list of tasks.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jiajun2002"},"content":"**Format:** `list`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jiajun2002"},"content":"**Output:**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jiajun2002"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jiajun2002"},"content":"1. [T][ ] play basketball","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jiajun2002"},"content":"2. [D][ ] beat the nuggets (by: tmr 6pm)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jiajun2002"},"content":"3. [E][ ] game vs warriors (from: 6pm to: 8pm)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jiajun2002"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jiajun2002"},"content":"### Marking a Task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jiajun2002"},"content":"Marks a task as completed.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jiajun2002"},"content":"**Format:** `mark INDEX`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jiajun2002"},"content":"**Example:** `mark 2`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jiajun2002"},"content":"**Output:**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jiajun2002"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jiajun2002"},"content":"Done and dusted, you\u0027re gonna shatter my records in no time!","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jiajun2002"},"content":"[D][X] beat the nuggets (by: tmr 6pm)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jiajun2002"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jiajun2002"},"content":"### Unarking a Task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jiajun2002"},"content":"Unmarks a task.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jiajun2002"},"content":"**Format:** `unmark INDEX`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jiajun2002"},"content":"**Example:** `unmark 2`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jiajun2002"},"content":"**Output:**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jiajun2002"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jiajun2002"},"content":"I ain\u0027t worried, we\u0027ll clear that soon!","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jiajun2002"},"content":"[D][ ] beat the nuggets (by: tmr 6pm)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jiajun2002"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jiajun2002"},"content":"### Deleting a Task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jiajun2002"},"content":"Deletes a task from the list.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jiajun2002"},"content":"**Format:** `delete INDEX`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jiajun2002"},"content":"**Example:** `delete 2`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jiajun2002"},"content":"**Output:**","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jiajun2002"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jiajun2002"},"content":"Traded! We won\u0027t be seeing him ever again: ","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jiajun2002"},"content":"[D][ ] beat the nuggets (by: tmr 6pm)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jiajun2002"},"content":"Remaining tasks: 2","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jiajun2002"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jiajun2002"},"content":"### Finding a Task","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jiajun2002"},"content":"Finds and displays the tasks containing a keyword.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jiajun2002"},"content":"**Format:** `find KEYWORD`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jiajun2002"},"content":"**Example:** `find basketball`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jiajun2002"},"content":"**Output:** ","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jiajun2002"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jiajun2002"},"content":"Got em! Here are the matching tasks!","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jiajun2002"},"content":"1. [T][ ] play basketball","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jiajun2002"},"content":"2. [T][ ] play basketball again","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jiajun2002"},"content":"3. [D][ ] play another game of basketball (by: tmr)","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jiajun2002"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jiajun2002"},"content":"### Exiting Lebron","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jiajun2002"},"content":"Ends the application.","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jiajun2002"},"content":"**Format:** `bye`","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jiajun2002"},"content":"**Output:** ","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jiajun2002"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jiajun2002"},"content":"Aight catch you later, see you at the game!","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jiajun2002"},"content":"```","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jiajun2002"},"content":"## Command Summary","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jiajun2002"},"content":"| command    | description                       | format |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jiajun2002"},"content":"|------------|-----------------------------------| --- |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jiajun2002"},"content":"| `todo`     | Adds a todo task                  |`todo DESCRIPTION` |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jiajun2002"},"content":"| `deadline` | Adds a deadline task              |`deadline DESCRIPTION /by DATE` |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jiajun2002"},"content":"| `event`    | Adds an event       task          |`event DESCRIPTION /from START_DATE /to END_DATE` |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jiajun2002"},"content":"| `list`     | Displays the current tasks        |`list` |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jiajun2002"},"content":"| `mark`     | Marks a task                      | `mark INDEX` |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jiajun2002"},"content":"| `unmark`   | Unmarks a task                    | `unmark INDEX` |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jiajun2002"},"content":"| `delete`   | Deletes a task                    | `delete INDEX` |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jiajun2002"},"content":"| `find`     | Finds task with the given keyword | `find KEYWORD` |","lastModifiedDate":"2025-03-06","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jiajun2002"},"content":"| `bye`       | Ends the application              | `bye` |","lastModifiedDate":"2025-03-06","isFullCredit":false}],"authorContributionMap":{"jiajun2002":125,"-":16}},{"path":"src/main/java/lebron/Lebron.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiajun2002"},"content":"package lebron;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiajun2002"},"content":"import lebron.exception.*;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiajun2002"},"content":"import lebron.storage.Storage;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiajun2002"},"content":"import lebron.parser.Parser;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiajun2002"},"content":"import lebron.ui.Ui;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiajun2002"},"content":"import lebron.task.*;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiajun2002"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiajun2002"},"content":" * The main class for the Lebron task management application.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiajun2002"},"content":" * Responsible for initialisation, processing user input, and user interaction.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiajun2002"},"content":" *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiajun2002"},"content":" * @author Tong Jia Jun","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiajun2002"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiajun2002"},"content":"public class Lebron {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiajun2002"},"content":"    private static final String FILE_PATH \u003d \"./data/Lebron.txt\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiajun2002"},"content":"    private Storage storage;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiajun2002"},"content":"    private Ui ui;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiajun2002"},"content":"    private TaskList tasks;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiajun2002"},"content":"     * Constructs a {@code Lebron} instance with the specified file path for storage.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiajun2002"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiajun2002"},"content":"    public Lebron(String filePath) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiajun2002"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiajun2002"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiajun2002"},"content":"        tasks \u003d new TaskList(storage.loadTasks(), storage, ui);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiajun2002"},"content":"     * Runs the main application loop and handles user commands.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiajun2002"},"content":"     * Terminated when user input is \"bye\".","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiajun2002"},"content":"    public void run() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiajun2002"},"content":"        ui.printGreetingMessage();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiajun2002"},"content":"        while(true) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiajun2002"},"content":"            String line \u003d ui.readCommand();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiajun2002"},"content":"            if (line.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiajun2002"},"content":"                System.out.println(\"Aight catch you later, see you at the game!\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiajun2002"},"content":"                ui.printLinebreak();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiajun2002"},"content":"                break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiajun2002"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jiajun2002"},"content":"            if (line.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiajun2002"},"content":"                ui.printTaskList(tasks);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jiajun2002"},"content":"                continue;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiajun2002"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jiajun2002"},"content":"            try {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jiajun2002"},"content":"                Parser.processCommand(line, tasks, ui);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jiajun2002"},"content":"            } catch (UnknownCommandException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jiajun2002"},"content":"                ui.printErrorMessage(\"Not sure what you\u0027re trying to make me do, start off with todo/deadline/event instead!\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jiajun2002"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jiajun2002"},"content":"     * Entry point of the application.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jiajun2002"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jiajun2002"},"content":"        new Lebron(FILE_PATH).run();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jiajun2002"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"jiajun2002":64}},{"path":"src/main/java/lebron/exception/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiajun2002"},"content":"package lebron.exception;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiajun2002"},"content":"public class EmptyTaskException extends Exception {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiajun2002"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"jiajun2002":4}},{"path":"src/main/java/lebron/exception/InvalidDeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiajun2002"},"content":"package lebron.exception;","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiajun2002"},"content":"public class InvalidDeleteException extends Exception {","lastModifiedDate":"2025-02-18","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiajun2002"},"content":"}","lastModifiedDate":"2025-02-18","isFullCredit":false}],"authorContributionMap":{"jiajun2002":4}},{"path":"src/main/java/lebron/exception/InvalidFindingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiajun2002"},"content":"package lebron.exception;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiajun2002"},"content":"public class InvalidFindingException extends Exception {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiajun2002"},"content":"}","lastModifiedDate":"2025-03-04","isFullCredit":false}],"authorContributionMap":{"jiajun2002":4}},{"path":"src/main/java/lebron/exception/InvalidMarkingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiajun2002"},"content":"package lebron.exception;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiajun2002"},"content":"public class InvalidMarkingException extends Exception {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiajun2002"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"jiajun2002":4}},{"path":"src/main/java/lebron/exception/InvalidTaskFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiajun2002"},"content":"package lebron.exception;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiajun2002"},"content":"public class InvalidTaskFormatException extends Exception {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiajun2002"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"jiajun2002":4}},{"path":"src/main/java/lebron/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiajun2002"},"content":"package lebron.exception;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiajun2002"},"content":"public class UnknownCommandException extends Exception {","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiajun2002"},"content":"}","lastModifiedDate":"2025-02-10","isFullCredit":false}],"authorContributionMap":{"jiajun2002":4}},{"path":"src/main/java/lebron/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiajun2002"},"content":"package lebron.parser;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiajun2002"},"content":"import lebron.exception.*;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiajun2002"},"content":"import lebron.task.TaskList;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiajun2002"},"content":"import lebron.ui.Ui;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiajun2002"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiajun2002"},"content":" * Deals with processing user command and executes the appropriate command.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiajun2002"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiajun2002"},"content":"public class Parser {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiajun2002"},"content":"     * Interprets user input and executes the appropriate command.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiajun2002"},"content":"     * @param line The user input.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiajun2002"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiajun2002"},"content":"     * @param ui UI for dealing with user interactions.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiajun2002"},"content":"     * @throws UnknownCommandException If the command is not recognised.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiajun2002"},"content":"    public static void processCommand(String line, TaskList tasks, Ui ui) throws UnknownCommandException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiajun2002"},"content":"        String[] words \u003d line.split(\" \");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiajun2002"},"content":"        switch(words[0]) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiajun2002"},"content":"        case \"mark\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiajun2002"},"content":"            try {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiajun2002"},"content":"                tasks.markTask(words);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiajun2002"},"content":"            } catch (EmptyTaskException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiajun2002"},"content":"                ui.printErrorMessage(\"Try inputting a number after mark!\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiajun2002"},"content":"            } catch (InvalidMarkingException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiajun2002"},"content":"                ui.printErrorMessage(\"That task doesn\u0027t exist yet, try inputting another number!\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiajun2002"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiajun2002"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiajun2002"},"content":"        case \"unmark\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiajun2002"},"content":"            try {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiajun2002"},"content":"                tasks.unmarkTask(words);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiajun2002"},"content":"            } catch (EmptyTaskException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiajun2002"},"content":"                ui.printErrorMessage(\"Try inputting a number after unmark!\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiajun2002"},"content":"            } catch (InvalidMarkingException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiajun2002"},"content":"                ui.printErrorMessage(\"That task doesn\u0027t exist yet, try inputting another number!\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiajun2002"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiajun2002"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiajun2002"},"content":"        case \"todo\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiajun2002"},"content":"            try {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiajun2002"},"content":"                tasks.addTodo(line);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiajun2002"},"content":"            } catch (EmptyTaskException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiajun2002"},"content":"                ui.printErrorMessage(\"How you gonna have a todo for nothing!\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiajun2002"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jiajun2002"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiajun2002"},"content":"        case \"deadline\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jiajun2002"},"content":"            try {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiajun2002"},"content":"                tasks.addDeadline(line);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jiajun2002"},"content":"            } catch (EmptyTaskException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jiajun2002"},"content":"                ui.printErrorMessage(\"Your deadline can\u0027t be empty man!\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jiajun2002"},"content":"            } catch (InvalidTaskFormatException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jiajun2002"},"content":"                ui.printErrorMessage(\"Your deadline format has to include \u0027/by\u0027!\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jiajun2002"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jiajun2002"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jiajun2002"},"content":"        case \"event\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jiajun2002"},"content":"            try {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jiajun2002"},"content":"                tasks.addEvent(line);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jiajun2002"},"content":"            } catch (EmptyTaskException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jiajun2002"},"content":"                ui.printErrorMessage(\"An event where nothing happens? Not on my watch.\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jiajun2002"},"content":"            } catch (InvalidTaskFormatException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jiajun2002"},"content":"                ui.printErrorMessage(\"Your event format has to include \u0027/from\u0027 and \u0027/to!\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jiajun2002"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jiajun2002"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jiajun2002"},"content":"        case \"delete\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jiajun2002"},"content":"            try {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jiajun2002"},"content":"                tasks.deleteTask(words);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jiajun2002"},"content":"            } catch (EmptyTaskException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jiajun2002"},"content":"                ui.printErrorMessage(\"You gotta delete something at least!\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jiajun2002"},"content":"            } catch (InvalidDeleteException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jiajun2002"},"content":"                ui.printErrorMessage(\"Your form\u0027s a little off. Try inputting a valid number after \u0027delete\u0027!\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jiajun2002"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jiajun2002"},"content":"            break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jiajun2002"},"content":"        case \"find\":","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jiajun2002"},"content":"            try {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jiajun2002"},"content":"                tasks.findTask(words);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jiajun2002"},"content":"            } catch (EmptyTaskException e) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jiajun2002"},"content":"                ui.printErrorMessage(\"You gotta find something dude!\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jiajun2002"},"content":"            } catch (InvalidFindingException e) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jiajun2002"},"content":"                ui.printErrorMessage(\"Slow down there, keep it to a single keyword.\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jiajun2002"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jiajun2002"},"content":"            break;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jiajun2002"},"content":"        default:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jiajun2002"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jiajun2002"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"jiajun2002":87}},{"path":"src/main/java/lebron/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiajun2002"},"content":"package lebron.storage;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiajun2002"},"content":"import lebron.task.Task;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiajun2002"},"content":"import lebron.task.Todo;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiajun2002"},"content":"import lebron.task.Deadline;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiajun2002"},"content":"import lebron.task.Event;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiajun2002"},"content":"import java.io.File;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiajun2002"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiajun2002"},"content":"import java.io.FileWriter;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiajun2002"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiajun2002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiajun2002"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiajun2002"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiajun2002"},"content":" * Handles the loading and saving of tasks into the disk.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiajun2002"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiajun2002"},"content":"public class Storage {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiajun2002"},"content":"    private String filePath;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiajun2002"},"content":"     * Constructs a new {@code Storage} class with a given file path.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiajun2002"},"content":"     * @param filePath The file path of the stored tasks.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiajun2002"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiajun2002"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiajun2002"},"content":"     * Loads tasks from the text file into a new Task ArrayList.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiajun2002"},"content":"     * @return The loaded ArrayList","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiajun2002"},"content":"    public ArrayList\u003cTask\u003e loadTasks() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiajun2002"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiajun2002"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiajun2002"},"content":"        if (!f.exists()) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiajun2002"},"content":"            new File(\"./data\").mkdirs();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiajun2002"},"content":"            return tasks;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiajun2002"},"content":"        Scanner s;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiajun2002"},"content":"        try {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiajun2002"},"content":"            s \u003d new Scanner(f);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiajun2002"},"content":"        } catch(FileNotFoundException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiajun2002"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiajun2002"},"content":"            return tasks;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiajun2002"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jiajun2002"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiajun2002"},"content":"            String[] taskData \u003d line.split(\" \\\\| \");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jiajun2002"},"content":"            boolean isDone \u003d taskData[1].equals(\"1\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jiajun2002"},"content":"            switch (taskData[0]) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jiajun2002"},"content":"            case \"T\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jiajun2002"},"content":"                tasks.add(new Todo(taskData[2], isDone));","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jiajun2002"},"content":"                break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jiajun2002"},"content":"            case \"D\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jiajun2002"},"content":"                tasks.add(new Deadline(taskData[2], taskData[3], isDone));","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jiajun2002"},"content":"                break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jiajun2002"},"content":"            case \"E\":","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jiajun2002"},"content":"                tasks.add(new Event(taskData[2], taskData[3], taskData[4], isDone));","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jiajun2002"},"content":"                break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jiajun2002"},"content":"            default:","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jiajun2002"},"content":"                System.out.println(\"Not too sure what this is: \" + taskData[0]);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jiajun2002"},"content":"                break;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jiajun2002"},"content":"            }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jiajun2002"},"content":"        return tasks;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jiajun2002"},"content":"     * Saves the task list into the text file.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jiajun2002"},"content":"     * @param tasks The tasks to be saved.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jiajun2002"},"content":"     * @throws IOException If an I/O exception has occurred.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jiajun2002"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jiajun2002"},"content":"        FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jiajun2002"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jiajun2002"},"content":"            writer.write(task.toTxtFile() + System.lineSeparator());","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jiajun2002"},"content":"        writer.close();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jiajun2002"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"jiajun2002":81}},{"path":"src/main/java/lebron/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiajun2002"},"content":"package lebron.task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiajun2002"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiajun2002"},"content":" * Represents a task that needs to be done by a specific time.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiajun2002"},"content":" * A {@code Deadline} has a description and a due date.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiajun2002"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiajun2002"},"content":"public class Deadline extends Task {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiajun2002"},"content":"    protected String by;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiajun2002"},"content":"     * Constructs an {@code Deadline} with the given description and due date.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiajun2002"},"content":"     * @param description Description of the deadline.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiajun2002"},"content":"     * @param by Due date of the deadline.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiajun2002"},"content":"    public Deadline(String description, String by){","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiajun2002"},"content":"        super(description);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiajun2002"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiajun2002"},"content":"     * Constructs an {@code Deadline} with the given description, due date and marked status.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiajun2002"},"content":"     * @param description Description of the deadline.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiajun2002"},"content":"     * @param by Due date of the deadline.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiajun2002"},"content":"     * @param isDone Marked status of the deadline.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiajun2002"},"content":"    public Deadline(String description, String by, Boolean isDone){","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiajun2002"},"content":"        super(description);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiajun2002"},"content":"        this.by \u003d by;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiajun2002"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiajun2002"},"content":"     * Returns a string representation of the deadline.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiajun2002"},"content":"     * @return A formatted string with the deadline type, status, description, and due date.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiajun2002"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiajun2002"},"content":"    public String toString(){","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiajun2002"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiajun2002"},"content":"     * Returns a string representation of the deadline for saving.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiajun2002"},"content":"     * @return A formatted string for storage, with the deadline type, status, description, and due date.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiajun2002"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jiajun2002"},"content":"    public String toTxtFile() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jiajun2002"},"content":"        return \"D | \" + super.toTxtFile() + \" | \" + by;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jiajun2002"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"jiajun2002":53}},{"path":"src/main/java/lebron/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiajun2002"},"content":"package lebron.task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiajun2002"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiajun2002"},"content":" * Represents a task that starts at a specific time and ends at a specific time.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiajun2002"},"content":" * A {@code Event} has a description, a start time, and an end time.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiajun2002"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiajun2002"},"content":"public class Event extends Task {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiajun2002"},"content":"    protected String from;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiajun2002"},"content":"    protected String to;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiajun2002"},"content":"     * Constructs an {@code Event} with the given description, start date, and end date.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiajun2002"},"content":"     * @param description Description of the event.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiajun2002"},"content":"     * @param from Start date of the event.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiajun2002"},"content":"     * @param to End date of the event.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiajun2002"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiajun2002"},"content":"        super(description);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiajun2002"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiajun2002"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiajun2002"},"content":"     * Constructs an {@code Event} with the given description, start and end date, and marked status.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiajun2002"},"content":"     * @param description Description of the event.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiajun2002"},"content":"     * @param from Start date of the event.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiajun2002"},"content":"     * @param to End date of the event.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiajun2002"},"content":"     * @param isDone Marked status of the event.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiajun2002"},"content":"    public Event(String description, String from, String to, Boolean isDone) {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiajun2002"},"content":"        super(description);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiajun2002"},"content":"        this.from \u003d from;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiajun2002"},"content":"        this.to \u003d to;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiajun2002"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiajun2002"},"content":"     * Returns a string representation of the event.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiajun2002"},"content":"     * @return A formatted string with the event type, status, description, and dates.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiajun2002"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiajun2002"},"content":"    public String toString() {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jiajun2002"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from + \"to: \" + to + \")\";","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jiajun2002"},"content":"     * Returns a string representation of the event for saving.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jiajun2002"},"content":"     * @return A formatted string for storage, with the event type, status, description, and dates.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jiajun2002"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jiajun2002"},"content":"    public String toTxtFile() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jiajun2002"},"content":"        return \"E | \" + super.toTxtFile() + \" | \" + from + \" | \" + to;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jiajun2002"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"jiajun2002":58}},{"path":"src/main/java/lebron/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiajun2002"},"content":"package lebron.task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiajun2002"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiajun2002"},"content":" * Represents an abstract task to be subclassed by other classes.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiajun2002"},"content":" * Provides methods to check and mark if a task is done and","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiajun2002"},"content":" * get the task description.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiajun2002"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiajun2002"},"content":"public class Task {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiajun2002"},"content":"    protected String description;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiajun2002"},"content":"    protected boolean isDone;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiajun2002"},"content":"    public Task(String description) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiajun2002"},"content":"        this.description \u003d description;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiajun2002"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiajun2002"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiajun2002"},"content":"        return (isDone? \"X\" : \" \");","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiajun2002"},"content":"    public String getDescription(){","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiajun2002"},"content":"        return description;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiajun2002"},"content":"    public void setStatus(boolean status) {","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiajun2002"},"content":"        isDone \u003d status;","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiajun2002"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiajun2002"},"content":"    public String toString(){","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiajun2002"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiajun2002"},"content":"    public String toTxtFile() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiajun2002"},"content":"        return (isDone? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiajun2002"},"content":"}","lastModifiedDate":"2025-02-01","isFullCredit":false}],"authorContributionMap":{"jiajun2002":37}},{"path":"src/main/java/lebron/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiajun2002"},"content":"package lebron.task;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiajun2002"},"content":"import lebron.exception.*;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiajun2002"},"content":"import lebron.storage.Storage;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiajun2002"},"content":"import lebron.ui.Ui;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiajun2002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiajun2002"},"content":"import java.io.IOException;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiajun2002"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiajun2002"},"content":" * Manages the task list and provides methods to modify it.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiajun2002"},"content":" * Provides methods such as addition, deleting, marking, unmarking.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiajun2002"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiajun2002"},"content":"public class TaskList {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiajun2002"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiajun2002"},"content":"    private Storage storage;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiajun2002"},"content":"    private Ui ui;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiajun2002"},"content":"     * Constructs a new {@code TaskList} with the given list of tasks, storage, and UI.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiajun2002"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiajun2002"},"content":"     * @param storage Storage handler for saving and loading tasks.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiajun2002"},"content":"     * @param ui UI handler for managing user interactions.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiajun2002"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks, Storage storage, Ui ui) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiajun2002"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiajun2002"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiajun2002"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiajun2002"},"content":"     * Adds a new ToDo task to the task list.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiajun2002"},"content":"     * @param todo The todo to be added.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiajun2002"},"content":"     * @throws EmptyTaskException If the description is empty.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiajun2002"},"content":"    public void addTodo(String todo) throws EmptyTaskException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiajun2002"},"content":"        checkEmptyTask(todo);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiajun2002"},"content":"        String task \u003d todo.substring(todo.indexOf(\" \") + 1);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiajun2002"},"content":"        tasks.add(new Todo(task));","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiajun2002"},"content":"        ui.printAddingMessage(task, tasks.size());","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiajun2002"},"content":"        try {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiajun2002"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jiajun2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiajun2002"},"content":"            System.out.println(\"Error saving tasks: \" + e.getMessage());","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jiajun2002"},"content":"     * Adds a new Deadline task to the task list.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jiajun2002"},"content":"     * @param deadline The deadline to be added.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jiajun2002"},"content":"     * @throws EmptyTaskException If the deadline description is empty.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jiajun2002"},"content":"     * @throws InvalidTaskFormatException If the deadline format is invalid.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jiajun2002"},"content":"    public void addDeadline(String deadline) throws EmptyTaskException, InvalidTaskFormatException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jiajun2002"},"content":"        checkEmptyTask(deadline);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jiajun2002"},"content":"        int split \u003d deadline.indexOf(\"/by\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jiajun2002"},"content":"        if (split \u003d\u003d -1) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jiajun2002"},"content":"            throw new InvalidTaskFormatException();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jiajun2002"},"content":"        int taskStartingPos \u003d \"deadline \".length();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jiajun2002"},"content":"        int dateStartingPos \u003d split + \"/by \".length();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jiajun2002"},"content":"        String task \u003d deadline.substring(taskStartingPos, split);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jiajun2002"},"content":"        String date \u003d deadline.substring(dateStartingPos);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jiajun2002"},"content":"        Deadline toAdd \u003d new Deadline(task, date);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jiajun2002"},"content":"        tasks.add(toAdd);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jiajun2002"},"content":"        ui.printAddingMessage(toAdd.toString(), tasks.size());","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jiajun2002"},"content":"        try {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jiajun2002"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jiajun2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jiajun2002"},"content":"            System.out.println(\"Hmmmm can\u0027t seem to save this: \" + e.getMessage());","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jiajun2002"},"content":"     * Adds a new Event task to the task list.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jiajun2002"},"content":"     * @param event The event to be added.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jiajun2002"},"content":"     * @throws EmptyTaskException If the event description is empty.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jiajun2002"},"content":"     * @throws InvalidTaskFormatException If the event format is invalid.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jiajun2002"},"content":"    public void addEvent(String event) throws EmptyTaskException, InvalidTaskFormatException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jiajun2002"},"content":"        checkEmptyTask(event);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jiajun2002"},"content":"        int firstSplit \u003d event.indexOf(\"/from\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jiajun2002"},"content":"        int secondSplit \u003d event.indexOf(\"/to\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jiajun2002"},"content":"        if ((firstSplit \u003d\u003d -1) || (secondSplit \u003d\u003d -1)) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jiajun2002"},"content":"            throw new InvalidTaskFormatException();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jiajun2002"},"content":"        int taskStartingPos \u003d \"event \".length();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jiajun2002"},"content":"        int fromStartingPos \u003d firstSplit + \"/from \".length();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jiajun2002"},"content":"        int toStartingPos \u003d secondSplit + \"/to \".length();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jiajun2002"},"content":"        String task \u003d event.substring(taskStartingPos, firstSplit);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jiajun2002"},"content":"        String from \u003d event.substring(fromStartingPos, secondSplit);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jiajun2002"},"content":"        String to \u003d event.substring(toStartingPos);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jiajun2002"},"content":"        Event toAdd \u003d new Event(task, from, to);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jiajun2002"},"content":"        tasks.add(toAdd);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jiajun2002"},"content":"        ui.printAddingMessage(toAdd.toString(), tasks.size());","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jiajun2002"},"content":"        try {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jiajun2002"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jiajun2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jiajun2002"},"content":"            System.out.println(\"Hmmmm can\u0027t seem to save this: \" + e.getMessage());","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jiajun2002"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jiajun2002"},"content":"     * @param taskInput The input containing the task index.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jiajun2002"},"content":"     * @throws EmptyTaskException If no task index is provided.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jiajun2002"},"content":"     * @throws InvalidDeleteException If the index is out of range.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jiajun2002"},"content":"    public void deleteTask(String[] taskInput) throws EmptyTaskException, InvalidDeleteException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jiajun2002"},"content":"        checkEmptyTaskArr(taskInput);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jiajun2002"},"content":"        int idx \u003d Integer.parseInt(taskInput[1]) - 1;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jiajun2002"},"content":"        if (idx \u003c 0 || idx \u003e\u003d tasks.size() || taskInput.length \u003e 2) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jiajun2002"},"content":"            throw new InvalidDeleteException();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"jiajun2002"},"content":"        Task toPrint \u003d tasks.get(idx);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"jiajun2002"},"content":"        tasks.remove(idx);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"jiajun2002"},"content":"        ui.printDeletedMessage(toPrint, tasks.size());","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"jiajun2002"},"content":"        try {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"jiajun2002"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"jiajun2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"jiajun2002"},"content":"            System.out.println(\"Hmmmm can\u0027t seem to save this: \" + e.getMessage());","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"jiajun2002"},"content":"     * Marks a task in the task list.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"jiajun2002"},"content":"     * @param taskInput The input containing the task index.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"jiajun2002"},"content":"     * @throws EmptyTaskException If no task index is provided.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"jiajun2002"},"content":"     * @throws InvalidMarkingException If the index is out of range.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"jiajun2002"},"content":"    public void markTask(String[] taskInput) throws EmptyTaskException, InvalidMarkingException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"jiajun2002"},"content":"        checkEmptyTaskArr(taskInput);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"jiajun2002"},"content":"        int idx \u003d Integer.parseInt(taskInput[1]) - 1;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"jiajun2002"},"content":"        if (idx \u003c 0 || idx \u003e\u003d tasks.size() || taskInput.length \u003e 2) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"jiajun2002"},"content":"            throw new InvalidMarkingException();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"jiajun2002"},"content":"        tasks.get(idx).setStatus(true);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"jiajun2002"},"content":"        ui.printMarkedMessage(tasks.get(idx));","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"jiajun2002"},"content":"        try {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"jiajun2002"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"jiajun2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"jiajun2002"},"content":"            System.out.println(\"Hmmmm can\u0027t seem to save this: \" + e.getMessage());","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"jiajun2002"},"content":"     * Unmarks a task in the task list.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"jiajun2002"},"content":"     * @param taskInput The input containing the task index.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"jiajun2002"},"content":"     * @throws EmptyTaskException If no task index is provided.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"jiajun2002"},"content":"     * @throws InvalidMarkingException If the index is out of range.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"jiajun2002"},"content":"    public void unmarkTask(String[] taskInput) throws EmptyTaskException, InvalidMarkingException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"jiajun2002"},"content":"        checkEmptyTaskArr(taskInput);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"jiajun2002"},"content":"        int idx \u003d Integer.parseInt(taskInput[1]) - 1;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"jiajun2002"},"content":"        if (idx \u003c 0 || idx \u003e\u003d tasks.size() || taskInput.length \u003e 2) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"jiajun2002"},"content":"            throw new InvalidMarkingException();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"jiajun2002"},"content":"        tasks.get(idx).setStatus(false);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"jiajun2002"},"content":"        ui.printUnmarkedMessage(tasks.get(idx));","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"jiajun2002"},"content":"        try {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":173,"author":{"gitId":"jiajun2002"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":174,"author":{"gitId":"jiajun2002"},"content":"        } catch (IOException e) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":175,"author":{"gitId":"jiajun2002"},"content":"            System.out.println(\"Hmmmm can\u0027t seem to save this: \" + e.getMessage());","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":176,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":177,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":178,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":179,"author":{"gitId":"jiajun2002"},"content":"    public void findTask(String[] taskInput) throws EmptyTaskException, InvalidFindingException {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":180,"author":{"gitId":"jiajun2002"},"content":"        checkEmptyTaskArr(taskInput);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":181,"author":{"gitId":"jiajun2002"},"content":"        if (taskInput.length \u003e 2) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":182,"author":{"gitId":"jiajun2002"},"content":"            throw new InvalidFindingException();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":183,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":184,"author":{"gitId":"jiajun2002"},"content":"        String toFind \u003d taskInput[1].toLowerCase();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":185,"author":{"gitId":"jiajun2002"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":186,"author":{"gitId":"jiajun2002"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":187,"author":{"gitId":"jiajun2002"},"content":"            String taskLowerCase \u003d task.description.toLowerCase();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":188,"author":{"gitId":"jiajun2002"},"content":"            if (taskLowerCase.contains(toFind)) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":189,"author":{"gitId":"jiajun2002"},"content":"                foundTasks.add(task);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":190,"author":{"gitId":"jiajun2002"},"content":"            }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":191,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":192,"author":{"gitId":"jiajun2002"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":193,"author":{"gitId":"jiajun2002"},"content":"            System.out.println(\"Can\u0027t seem to find any tasks here! Try another one!\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":194,"author":{"gitId":"jiajun2002"},"content":"            ui.printLinebreak();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":195,"author":{"gitId":"jiajun2002"},"content":"            return;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":196,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":197,"author":{"gitId":"jiajun2002"},"content":"        ui.printFoundMessage(foundTasks);","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":198,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":199,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":200,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":201,"author":{"gitId":"jiajun2002"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":202,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":203,"author":{"gitId":"jiajun2002"},"content":"     * @return The number of tasks.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":204,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":205,"author":{"gitId":"jiajun2002"},"content":"    public int size() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":206,"author":{"gitId":"jiajun2002"},"content":"        return tasks.size();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":207,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":208,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":209,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":210,"author":{"gitId":"jiajun2002"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":211,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":212,"author":{"gitId":"jiajun2002"},"content":"     * @return True if list is empty, false otherwise.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":213,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":214,"author":{"gitId":"jiajun2002"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":215,"author":{"gitId":"jiajun2002"},"content":"        return tasks.isEmpty();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":216,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":217,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":218,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":219,"author":{"gitId":"jiajun2002"},"content":"     * Retrieves a task at a given index.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":220,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":221,"author":{"gitId":"jiajun2002"},"content":"     * @param index Index of the task to be retrieved","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":222,"author":{"gitId":"jiajun2002"},"content":"     * @return The task at the index.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":223,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":224,"author":{"gitId":"jiajun2002"},"content":"    public Task get(int index) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":225,"author":{"gitId":"jiajun2002"},"content":"        return tasks.get(index);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":226,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":227,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":228,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":229,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":230,"author":{"gitId":"jiajun2002"},"content":"     * Checks whether a task description is empty.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":231,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":232,"author":{"gitId":"jiajun2002"},"content":"     * @param task The task description.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":233,"author":{"gitId":"jiajun2002"},"content":"     * @throws EmptyTaskException If the task description is empty or missing other details.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":234,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":235,"author":{"gitId":"jiajun2002"},"content":"    private void checkEmptyTask(String task) throws EmptyTaskException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":236,"author":{"gitId":"jiajun2002"},"content":"        String[] words \u003d task.split(\" \");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":237,"author":{"gitId":"jiajun2002"},"content":"        if (words.length \u003c 2 || words[1].equals(\"/by\") || words[1].equals(\"/from\")) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":238,"author":{"gitId":"jiajun2002"},"content":"            throw new EmptyTaskException();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":239,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":240,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":241,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":242,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":243,"author":{"gitId":"jiajun2002"},"content":"     * Checks whether a command input is valid/contains a valid index.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":244,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":245,"author":{"gitId":"jiajun2002"},"content":"     * @param taskInput The command input array.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":246,"author":{"gitId":"jiajun2002"},"content":"     * @throws EmptyTaskException If no task index is provided.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":247,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":248,"author":{"gitId":"jiajun2002"},"content":"    private void checkEmptyTaskArr(String[] taskInput) throws EmptyTaskException {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":249,"author":{"gitId":"jiajun2002"},"content":"        if (taskInput.length \u003c 2) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":250,"author":{"gitId":"jiajun2002"},"content":"            throw new EmptyTaskException();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":251,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":252,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":253,"author":{"gitId":"jiajun2002"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"jiajun2002":253}},{"path":"src/main/java/lebron/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiajun2002"},"content":"package lebron.task;","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiajun2002"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiajun2002"},"content":" * Represents a simple task to be added.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiajun2002"},"content":" * A {@code Todo} has a description.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiajun2002"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiajun2002"},"content":"public class Todo extends Task {","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiajun2002"},"content":"     * Constructs an {@code Todo} with the given description.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiajun2002"},"content":"     * @param description Description of the todo.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiajun2002"},"content":"    public Todo(String description){","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiajun2002"},"content":"        super(description);","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiajun2002"},"content":"     * Constructs an {@code Todo} with the given description and marked status.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiajun2002"},"content":"     * @param description Description of the todo.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiajun2002"},"content":"     * @param isDone Marked status of the todo.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiajun2002"},"content":"    public Todo(String description, Boolean isDone){","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiajun2002"},"content":"        super(description);","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiajun2002"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiajun2002"},"content":"     * Returns a string representation of the todo.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiajun2002"},"content":"     * @return A formatted string with the todo type, status and description.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiajun2002"},"content":"    @Override","lastModifiedDate":"2025-02-10","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiajun2002"},"content":"    public String toString(){","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiajun2002"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-02-05","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiajun2002"},"content":"     * Returns a string representation of the todo for saving.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiajun2002"},"content":"     * @return A formatted string for storage, with the todo type, status and description.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiajun2002"},"content":"    @Override","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiajun2002"},"content":"    public String toTxtFile() {","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jiajun2002"},"content":"        return \"T | \" + super.toTxtFile();","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-02-20","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiajun2002"},"content":"}","lastModifiedDate":"2025-02-05","isFullCredit":false}],"authorContributionMap":{"jiajun2002":49}},{"path":"src/main/java/lebron/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jiajun2002"},"content":"package lebron.ui;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"jiajun2002"},"content":"import lebron.task.Task;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"jiajun2002"},"content":"import lebron.task.TaskList;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"jiajun2002"},"content":"import java.util.ArrayList;","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"jiajun2002"},"content":"import java.util.Scanner;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"jiajun2002"},"content":"/**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"jiajun2002"},"content":" * Manages user interactions with the user.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"jiajun2002"},"content":" * Provides methods for printing various messages and receiving user input.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"jiajun2002"},"content":" */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"jiajun2002"},"content":"public class Ui {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"jiajun2002"},"content":"    private static final String LINE_BREAK \u003d \"____________________________________________________________\";","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"jiajun2002"},"content":"    public void printLinebreak() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiajun2002"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"jiajun2002"},"content":"     * Prints a greeting message when program starts.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"jiajun2002"},"content":"    public void printGreetingMessage() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"jiajun2002"},"content":"        System.out.println(\"Hello! I\u0027m Lebron, just a little kid from Akron\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"jiajun2002"},"content":"        System.out.println(\"What we doing today?\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"jiajun2002"},"content":"        printLinebreak();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"jiajun2002"},"content":"     * Prints a message when a task is successfully added.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"jiajun2002"},"content":"     * @param task Task that was added.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"jiajun2002"},"content":"     * @param size Number of tasks in the list after addition.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"jiajun2002"},"content":"    public void printAddingMessage(String task, int size) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"jiajun2002"},"content":"        System.out.println(\"Alright! Get ready to do this: \");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"jiajun2002"},"content":"        System.out.println(\"--\u003e \" + task);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"jiajun2002"},"content":"        System.out.println(\"Be confident in your ability! Current tasks: \" + size);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"jiajun2002"},"content":"        printLinebreak();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"jiajun2002"},"content":"     * Prints a message when a task is successfully marked.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"jiajun2002"},"content":"     * @param task Task that is being marked.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"jiajun2002"},"content":"    public void printMarkedMessage(Task task) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"jiajun2002"},"content":"        System.out.println(\"Done and dusted, you\u0027re gonna shatter my records in no time!\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"jiajun2002"},"content":"        System.out.println(task);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"jiajun2002"},"content":"        printLinebreak();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"jiajun2002"},"content":"     * Prints a message when a task is successfully unmarked.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"jiajun2002"},"content":"     * @param task Task that is being unmarked.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"jiajun2002"},"content":"    public void printUnmarkedMessage(Task task) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"jiajun2002"},"content":"        System.out.println(\"I ain\u0027t worried, we\u0027ll clear that soon!\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"jiajun2002"},"content":"        System.out.println(task);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"jiajun2002"},"content":"        printLinebreak();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"jiajun2002"},"content":"     * Prints a message when a task is successfully deleted.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"jiajun2002"},"content":"     * @param task Task that is being deleted.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"jiajun2002"},"content":"     * @param size Number of tasks in the list after deletion.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"jiajun2002"},"content":"    public void printDeletedMessage(Task task, int size) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"jiajun2002"},"content":"        System.out.println(\"Traded! We won\u0027t be seeing him ever again: \");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"jiajun2002"},"content":"        System.out.println(task);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"jiajun2002"},"content":"        System.out.println(\"Remaining tasks: \" + size);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"jiajun2002"},"content":"        printLinebreak();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"jiajun2002"},"content":"    public void printFoundMessage(ArrayList\u003cTask\u003e foundTasks) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"jiajun2002"},"content":"        System.out.println(\"Got em! Here are the matching tasks!\");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"jiajun2002"},"content":"        for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"jiajun2002"},"content":"            System.out.print(i+1 + \". \");","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"jiajun2002"},"content":"            System.out.println(foundTasks.get(i));","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"jiajun2002"},"content":"        printLinebreak();","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"jiajun2002"},"content":"     * Prints a message when an error is encountered.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"jiajun2002"},"content":"     * @param error Description of the error.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"jiajun2002"},"content":"    public void printErrorMessage(String error){","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"jiajun2002"},"content":"        System.out.println(\"Sorry that\u0027s a foul! \" + error);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"jiajun2002"},"content":"        printLinebreak();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"jiajun2002"},"content":"     * Prints all the tasks in the current list.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"jiajun2002"},"content":"     * @param tasks The list of tasks to be displayed.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"jiajun2002"},"content":"    public void printTaskList(TaskList tasks) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"jiajun2002"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"jiajun2002"},"content":"            System.out.println(\"No tasks here, try adding a todo/deadline/event!\");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"jiajun2002"},"content":"            printLinebreak();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"jiajun2002"},"content":"            return;","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"jiajun2002"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"jiajun2002"},"content":"            System.out.print(i+1 + \". \");","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"jiajun2002"},"content":"            System.out.println(tasks.get(i));","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"jiajun2002"},"content":"        }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"jiajun2002"},"content":"        printLinebreak();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"jiajun2002"},"content":"","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"jiajun2002"},"content":"    /**","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"jiajun2002"},"content":"     * Reads the user\u0027s command input.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"jiajun2002"},"content":"     *","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"jiajun2002"},"content":"     * @return The input as a string.","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"jiajun2002"},"content":"     */","lastModifiedDate":"2025-03-04","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"jiajun2002"},"content":"    public String readCommand() {","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"jiajun2002"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"jiajun2002"},"content":"        return input.nextLine();","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"jiajun2002"},"content":"    }","lastModifiedDate":"2025-03-03","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"jiajun2002"},"content":"}","lastModifiedDate":"2025-03-03","isFullCredit":false}],"authorContributionMap":{"jiajun2002":124}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"jiajun2002"},"content":"java -classpath ..\\bin Lebron \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2025-01-22","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25","isFullCredit":false}],"authorContributionMap":{"jiajun2002":1,"-":20}}]
